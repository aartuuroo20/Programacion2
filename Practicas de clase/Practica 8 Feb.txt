#include <iostream>
#include <memory>
#include <vector>
#include <array>
#include <functional>
using namespace  std;

vector<shared_ptr<int>> filter(array<shared_ptr<int>, 10> const & a, function<bool(int)>f){ //vector de punteros 
  vector<shared_ptr<int>> result;
  for(auto elem: a){
    if(f(*elem)) result.push_back(elem);
  }
  return result;

}

int main() {
  array<shared_ptr<int>,10> arr1; //array de punteros
  for(int i{0}; i<10; i++){ //añade 10 elementos al array de punteros
    int valor;
    cout << "Introduce elemento de array: "; cin >> valor;
    auto paux = make_shared<int>(valor); //crea un auxiliar de punteros añadiendo el valor introducido al array
    arr1.at(i) = paux;
    
  }
  for(auto pelem: arr1){ //muestra los elementos
    cout << *pelem << "-";
  }

  cout << "\n";

  auto par = [](int a){ //funcion de pares
    return a % 2 ==0;
  };

  auto vec = filter(arr1, par); //filtra los pares
  for(auto elem: vec){
    cout << *elem << "-";
  }
}
